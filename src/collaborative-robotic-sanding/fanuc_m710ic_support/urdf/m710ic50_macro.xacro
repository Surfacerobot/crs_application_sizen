<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:include filename="$(find fanuc_resources)/urdf/common_materials.xacro"/>

  <xacro:macro name="fanuc_m710ic50" params="prefix">
    <!-- links: main serial chain -->
	<link name="world" />
    <joint name="${prefix}world_base_link" type="fixed">
        <parent link="world" />
        <child link="${prefix}base_link" />
        <origin rpy="0 0 0" xyz="-2.5 0 0" />
    </joint>

    <link name="${prefix}base_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/base_link.stl"/>
        </geometry>
        <xacro:material_fanuc_black />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/base_link.stl"/>
        </geometry>
      </collision>
	  <inertial>
               <mass value="10.0" />
               <origin rpy="0 0 0" xyz="0 0 0" />
               <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    <link name="${prefix}link_1">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/link_1.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/link_1.stl"/>
        </geometry>
      </collision>
      <inertial>
                <mass value="5.0" />
                <origin rpy="0 0 0" xyz="0 0 0" />
                <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    <link name="${prefix}link_2">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/link_2.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/link_2.stl"/>
        </geometry>
      </collision>
      <inertial>
                <mass value="4.0" />
                <origin rpy="0 0 0" xyz="0 0 0" />
                <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    <link name="${prefix}link_3">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/link_3.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/link_3.stl"/>
        </geometry>
      </collision>
	  <inertial>
               <mass value="4.0" />
               <origin rpy="0 0 0" xyz="0 0 0" />
               <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    <link name="${prefix}link_4">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/link_4.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/link_4.stl"/>
        </geometry>
      </collision>
      <inertial>
               <mass value="5.0" />
               <origin rpy="0 0 0" xyz="0 0 0" />
               <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    <link name="${prefix}link_5">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/link_5.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/link_5.stl"/>
        </geometry>
      </collision>
      <inertial>
                <mass value="8.0" />
                <origin rpy="0 0 0" xyz="0 0 0" />
                <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>
    <link name="${prefix}link_6">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/visual/link_6.stl"/>
        </geometry>
        <xacro:material_fanuc_black />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_m710ic_support/meshes/m710ic50/collision/link_6.stl"/>
        </geometry>
      </collision>
     <inertial>
                <mass value="5.0" />
                <origin rpy="0 0 0" xyz="0 0 0" />
                <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
      </inertial>
    </link>

    <link name="${prefix}ef">
          <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
              <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/ef.stl"/>
            </geometry>
            <xacro:material_fanuc_yellow />
          </visual>
          <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
              <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/ef.stl"/>
            </geometry>
          </collision>

         <inertial>
                       <mass value="3.0" />
                       <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
                       <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
         </inertial>
      </link>

    <!-- joints: main serial chain -->
    <joint name="${prefix}joint_1" type="revolute">
      <origin xyz="0 0 0.565" rpy="0 0 0" />
      <parent link="${prefix}base_link" />
      <child link="${prefix}link_1" />
      <axis xyz="0 0 1" />
      <limit effort="0" lower="-3.1415" upper="3.1415" velocity="3.0543" />
    </joint>
    <joint name="${prefix}joint_2" type="revolute">
      <origin xyz="0.150 0 0" rpy="0 0 0"/>
      <parent link="${prefix}link_1" />
      <child link="${prefix}link_2" />
      <axis xyz="0 1 0" />
      <limit effort="0" lower="-1.5707" upper="2.3561" velocity="3.0543" />
    </joint>
    <joint name="${prefix}joint_3" type="revolute">
      <origin xyz="0 0 0.870" rpy="0 0 0"/>
      <parent link="${prefix}link_2" />
      <child link="${prefix}link_3" />
      <axis xyz="0 -1 0" />
      <limit effort="0" lower="-2.7925" upper="4.8869" velocity="3.0543" />
    </joint>
    <joint name="${prefix}joint_4" type="revolute">
      <origin xyz="0 0 0.170" rpy="0 0 0"/>
      <parent link="${prefix}link_3"/>
      <child link="${prefix}link_4"/>
      <axis xyz="-1 0 0"/>
      <limit effort="0" lower="-6.2830" upper="6.2830" velocity="4.3633" />
    </joint>
    <joint name="${prefix}joint_5" type="revolute">
      <origin xyz="1.016 0 0" rpy="0 0 0"/>
      <parent link="${prefix}link_4"/>
      <child link="${prefix}link_5"/>
      <axis xyz="0 -1 0"/>
      <limit effort="0" lower="-2.1816" upper="2.1816" velocity="4.3633" />
    </joint>
    <joint name="${prefix}joint_6" type="revolute">
      <origin xyz="0.175 0 0" rpy="0 0 0"/>
      <parent link="${prefix}link_5"/>
      <child link="${prefix}link_6"/>
      <axis xyz="-1 0 0"/>
      <limit effort="0" lower="-6.2831" upper="6.2831" velocity="6.1959" />
    </joint>

    <!-- ROS-Industrial 'base' frame: base_link to Fanuc World Coordinates transform -->
    <link name="${prefix}base" />
    <joint name="${prefix}base_link-base" type="fixed">
      <origin xyz="0 0 0.565" rpy="0 0 0"/>
      <parent link="${prefix}base_link"/>
      <child link="${prefix}base"/>
    </joint>

    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
    <link name="${prefix}flange" />
    <joint name="${prefix}joint_6-flange" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${prefix}link_6" />
      <child link="${prefix}flange" />
    </joint>

    <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
    <link name="${prefix}tool0" />
    <joint name="${prefix}link_6-tool0" type="fixed">
      <origin xyz="0 0 0" rpy="${pi} ${-pi/2.0} 0" />
      <parent link="${prefix}flange" />
      <child link="${prefix}tool0" />
    </joint>
    <joint name="${prefix}flange-ef" type="fixed">
          <origin xyz="0 0 0" rpy="${radians(180)} ${radians(-180)} 0" />
          <parent link="${prefix}tool0" />
          <child link="${prefix}ef" />
        </joint>
    <link name="${prefix}tcp" />
    <joint name="${prefix}tcp_ef" type="fixed">
       <origin xyz="-0.204433413 -7.32E-04 0.333181177" rpy="5.53832e-13 -0.785398 0"/>
      <parent link="${prefix}ef" />
      <child link="${prefix}tcp" />
    </joint>

	<!-- Modify by Sizen -->
	<transmission name="trans_joint_1">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}joint_1">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="joint_1_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

	<transmission name="trans_joint_2">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="${prefix}joint_2">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="joint_2_motor">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		    <mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="trans_joint_3">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="${prefix}joint_3">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="joint_3_motor">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		    <mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="trans_joint_4">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="${prefix}joint_4">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="joint_4_motor">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		    <mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="trans_joint_5">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="${prefix}joint_5">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="joint_5_motor">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		    <mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="trans_joint_6">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="${prefix}joint_6">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="joint_6_motor">
		    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		    <mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

    <gazebo reference="${prefix}base_link">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}link_1">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}link_2">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}link_3">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}link_4">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}link_5">
        <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}link_6">
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}tool0">
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}flange">
        <selfCollide>true</selfCollide>
    </gazebo>

	<gazebo reference="${prefix}gazebo_camera_link">
        <sensor type="depth" name="sensor_name">
          <!-- Set always_on only sensor, not on plugin -->
          <always_on>1</always_on>
          <!-- Set update_rate only sensor, not on plugin -->
          <update_rate>5</update_rate>
          <camera name="camera_name">
            <image>
              <width>320</width>
              <height>200</height>
            </image>
            <distortion>
              <k1>-0.0</k1>
              <k2>0.0</k2>
              <k3>0.0</k3>
              <p1>-0.0</p1>
              <p2>-0.0</p2>
              <center>0.5 0.5</center>
            </distortion>
          </camera>
          <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
            <!-- Change namespace, camera name and topics so:
                 * Raw images are published to: /custom_ns/custom_camera/custom_image
                 * Depth images are published to: /custom_ns/custom_camera/custom_image_depth
                 * Raw image camera info is published to: /custom_ns/custom_camera/custom_info_raw
                 * Depth image camera info is published to: /custom_ns/custom_camera/custom_info_depth
                 * Point cloud is published to: /custom_ns/custom_camera/custom_points
            -->
            <ros>
              <namespace>custom_ns</namespace>
              <argument>camera/image_raw:=camera/custom_image</argument>
              <argument>camera/image_depth:=camera/custom_image_depth</argument>
              <argument>camera/camera_info:=camera/custom_info_raw</argument>
              <argument>camera/camera_info_depth:=camera/custom_info_depth</argument>
              <argument>camera/points:=camera/pointcloud</argument>
            </ros>
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>camera</camera_name>
            <frame_name>camera_link_optical</frame_name>
            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <hack_baseline>0.07</hack_baseline>
            <!-- No need to repeat distortion parameters or to set autoDistortion -->
             <min_depth>0.1</min_depth>
          </plugin>
        </sensor>
    </gazebo>

    <gazebo>

        <plugin name='gazebo_ros_joint_state_publisher' filename='libgazebo_ros_joint_state_publisher.so'>
          <ros>
              <namespace>/test</namespace>
              <argument>joint_states:=joint_states</argument>
          </ros>
          <update_rate>50</update_rate>

          <joint_name>${prefix}joint_1</joint_name>
          <joint_name>${prefix}joint_2</joint_name>
          <joint_name>${prefix}joint_3</joint_name>
          <joint_name>${prefix}joint_4</joint_name>
          <joint_name>${prefix}joint_5</joint_name>
          <joint_name>${prefix}joint_6</joint_name>

        </plugin>

        <plugin name='crs_gazebo_plugins_joint_pose_trajectory' filename='libcrs_gazebo_plugins_joint_pose_trajectory.so'>
            <ros>
              <namespace>sim</namespace>
              <argument>follow_joint_trajectory:=${prefix}follow_joint_trajectory</argument>
            </ros>
            <update_rate>20</update_rate>
        </plugin>
    </gazebo>

  </xacro:macro>
</robot>
